@model LrcLyrics.Models.Lyrics

@{
    var submission = ViewData["Lyric"] as LyricsSubmission;
    ViewData["Title"] = $"Submission: {submission.Lyrics.Artist} - {submission.Lyrics.Title}";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (!ViewData.ContainsKey("Key"))
        ViewData["Key"] = "";
}

<div class="text-center">
    @if (!string.IsNullOrEmpty(ViewData["Key"]?.ToString()))
    {
        <div class="row">
            <div class="col-sm-6">Your key, save it to be able to edit your submission</div>
            <div class="col-sm-6">
                <input type="text" readonly value="@ViewData["Key"]" />
            </div>
        </div>
        <hr />
    }
    <h2>@ViewData["Title"]</h2>
    @if (submission.EditId.HasValue)
    {
        <div>Edit of <a href="@submission.Lyrics.Url">@submission.EditId.Value</a></div>
    }
    @if (submission.State == SubmissionState.Published)
    {
        <div style="color: limegreen">Accepted: <a href="@submission.Lyrics.Url">link</a></div>
    }
    else if (submission.State == SubmissionState.Denied)
    {
        <div class="text-danger">Denied: @submission.DeniedReason</div>
    }
</div>
@if (submission.State == SubmissionState.Pending || submission.State == SubmissionState.Denied)
{
    <hr />
    <div>
        <h2 class="d-inline">Edit submission</h2> <small>Key required</small>
        <br />
        <br />
        <form asp-controller="Lyrics" asp-action="UpdateSubmission" method="post">
            <input type="hidden" id="Id" name="Id" value="@submission.Id" />
            @Html.PartialAsync("_SubmissionForm", submission).Result
            <div class="form-row">
                <div class="form-group col-sm-6">
                    <label for="Key">Key</label>
                    <input class="form-control" name="Key" id="Key" type="text" placeholder="Your key" value="@ViewData["Key"]" />
                </div>
                <div class="form-group col-sm-6">
                    <label>&nbsp;</label>
                    <button type="submit" class="btn btn-outline-info btn-outline w-100">Apply edits</button>
                </div>
            </div>
        </form>
    </div>
}
<div class="text-center">
    <hr />
    @Html.PartialAsync("_LyricInfo", submission.Lyrics).Result
    <hr />
    @Html.PartialAsync("_LyricLines", submission.Lyrics).Result
</div>
@if (submission.State == SubmissionState.Pending || submission.State == SubmissionState.Denied)
{
    <div>
        <hr />
        <form method="post">
            <input type="hidden" id="Id" name="Id" value="@submission.Id" />
            <h2 class="d-inline">Publish submission</h2> <small>Key required</small>
            <br />
            <br />
            <div class="form-row">
                <div class="col-sm-6">
                    <input class="form-control" name="Key" id="Key" type="text" placeholder="Moderator key" />
                </div>
                <div class="col-sm-6">
                    <button asp-controller="Lyrics" asp-action="PublishSubmission" type="submit" class="btn btn-outline-primary btn-outline w-100">Publish</button>
                </div>
            </div>
            <br />
            <div class="form-row">
                <div class="col-sm-6">
                    <input class="form-control" name="DenyReason" id="DenyReason" type="text" placeholder="Deny reason" />
                </div>
                <div class="col-sm-6">
                    <button asp-controller="Lyrics" asp-action="DenySubmission" type="submit" class="btn btn-outline-danger btn-outline w-100">Deny</button>
                </div>
            </div>
        </form>
    </div>
}